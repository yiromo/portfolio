<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="../styles.css">
     <title>User Portfolio</title>
</head>
<body>
<div class="header">
    <h1>Welcome to My Portfolio</h1>
    <br>
    <nav>
        <ul>
            <li><a href="#intro">Intro</a></li>
            <li><a href="#about">About Me</a></li>
            <li><a href="#projects">Projects</a></li>
            <li><a href="#news">NEWS</a></li>
            <li><a href="#sendEmail">Contact Me</a></li>
        </ul>
    </nav>
    <% if (loggedIn) { %>
        <!-- Show user info and logout button -->
        <i class="fa-regular fa-user"></i>
        <p>Welcome, <%= user.name %>  (<%= user.username %>)</p>
        <form action="/logout" method="post">
            <button type="submit"><i class="fa-solid fa-right-from-bracket"></i> Logout</button>
        </form>
    <% } else { %>
        <!-- Show register button -->
        <button onclick="location.href='/register';"><i class="fa-solid fa-arrow-right-to-bracket"></i> Login</button>
    <% } %>
</div>
<br>
<div class="portfolioStatic">
<h2 id="intro">Intro</h2>
<h3>Hello Welcome! Here is my CV: </h3>
    <a href="../CVAmanzholovSanzhar.pdf" download="CVAmanzholovSanzhar.pdf" class="github-button"><i class="fa-solid fa-download"></i> Download CV</a>
    <hr>
<h2 id="about">Professional Goals</h2>
<p>My main goal is to become a competent specialist in software development focused on artificial intelligence and machine learning. I am passionate about the opportunities provided by these technologies and strive to delve deeper into this field and become an expert in it.</p>

<h2>Interests and Hobbies</h2>
<p>Currently, I have started studying and working with artificial intelligence and machine learning using the Python programming language and its various frameworks such as TensorFlow. Additionally, I am interested in the field of Open Source Intelligence (OSINT) and methods of collecting and analyzing data from various sources on the internet to extract useful information and analytics. I am also drawn to web technologies, and I would like to expand my knowledge in this area by learning HTML, CSS, JavaScript, and other web development tools.</p>

<ul>
    <li>
        <h3>SOLIDBANK:</h3>
        <p>Development of a banking system using Java and PostgreSQL.</p>
        <p>Description: Development of a full-featured banking system named SOLIDBANK using Java programming language and PostgreSQL database. This system is designed for managing banking operations, including account opening, transfers, loan operations, etc. Technologies Used: Java for backend development, PostgreSQL for data storage.</p>
        <p><a href="https://github.com/yiromo/my-final.github.io">GitHub Link</a></p>
    </li>
    <li>
        <h3>News site:</h3>
        <p>Creation of a news website using basic web technologies.</p>
        <p>Description: Development of a news website using fundamental web technologies such as HTML, CSS, JS, JQuery, Bootstrap, and Font Awesome. This project allows users to view the latest news organized into various categories. Technologies Used: HTML, CSS, JS, JQuery, Bootstrap, Font Awesome.</p>
        <p><a href="https://github.com/yiromo/my-final.github.io">GitHub Link</a></p>
    </li>
    <li>
        <h3>Login & register using Node.js:</h3>
        <p>Implementation of a login and registration system based on Node.js.</p>
        <p>Description: Development of a login and registration system based on Node.js using HTML, JS, and PostgreSQL for user data storage. This system provides secure user authentication and registration for accessing various online resources. Technologies Used: Node.js for backend, HTML, JS for frontend, PostgreSQL for data storage.</p>
        <p><a href="https://github.com/yiromo/loginregisterNode">GitHub Link</a></p>
    </li>
    <li>
        <h3>LiveChat:</h3>
        <p>Development of a real-time messaging application.</p>
        <p>Description: Development of a real-time messaging application called LiveChat. The client-side of the application is implemented using HTML, CSS, and JS, while the server-side uses Node.js and Socket.io to provide bidirectional communication. Technologies Used: HTML, CSS, JS for the client-side, Node.js and Socket.io for the server-side.</p>
        <p><a href="https://github.com/yiromo/livechat">GitHub Link</a></p>
    </li>
    <li>
        <h3>Nodemailer:</h3>
        <p>Development of an application for sending emails using Node.js and Nodemailer.</p>
        <p>Description: Development of an application for sending emails using Node.js and Nodemailer. This application allows users to send emails through the interface using the terminal, also Node.js and Nodemailer for the backend. Technologies Used: Node.js and Nodemailer for the server-side.</p>
        <p><a href="https://github.com/yiromo/nodemailer">GitHub Link</a></p>
    </li>
    <li>
        <h3>Weather App:</h3>
        <p>Creation of a weather forecast application using an API.</p>
        <p>Description: Development of a web application that allows users to get weather information for different locations using an API. Users can enter the name of the city, and the application displays the current weather forecast. Technologies Used: HTML, CSS, JS for the interface, Node.js for the backend, API for retrieving weather data.</p>
        <p><a href="https://github.com/yiromo/WeatherApp">GitHub Link</a></p>
    </li>
</ul>
<h2>Technology Stack:</h2>
<ul>
    <li>
        <p>Node.js, JS, HTML, CSS, Java, PostgreSQL, MongoDB, React.</p>
    </li>
</ul>
</div>
<br>
<h1 id="projects">Projects/Works:</h1>
<div class="portfolio" id="portfolioItems">
</div>
<br>
<h1>
    NEWS API
</h1>
<div class="news" id="news">
</div>
<h1>Stock API</h1>
<form id="stockForm">
    <label for="symbol">Enter Stock Symbol:</label>
    <input type="text" id="symbol" required>
    <button type="submit">Fetch Stock Data</button>
</form>
<div id="stockResult" class="stockResult"></div>
<br>
<div class="email-form">
    <h2 id="sendEmail">Send Email</h2>
    <form id="emailForm">
        <label for="from">From:</label>
        <input type="email" id="from" required><br><br>
        <label for="subject">Subject:</label>
        <input type="text" id="subject" name="subject" required><br><br>
        <label for="html">HTML Content:</label><br>
        <textarea id="html" name="html" rows="4" cols="50" required></textarea><br><br>
        <button type="submit">Send Email</button>
    </form>
    <div id="emailResponse"></div>
</div>
<br>
<footer>
    <a href="https://instagram.com/yiromo"><i class="fa-brands fa-instagram"></i></a>
</footer>
</body>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        const emailForm = document.getElementById('emailForm');
        const emailResponse = document.getElementById('emailResponse');

        // Add event listener to the form submission
        emailForm.addEventListener('submit', function (event) {
            event.preventDefault(); // Prevent default form submission behavior

            const subject = document.getElementById('subject').value;
            const htmlContent = document.getElementById('html').value;
            const from = document.getElementById('from').value; // Get the 'from' input value

            // Data to be sent in the POST request
            const data = {
                subject: subject,
                content: `From: ${from}\n\n${htmlContent}`, // Add 'from' input value to the content
            };

            // Send POST request to the server
            fetch('/send-email', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(data),
            })
                .then(response => response.text())
                .then(result => {
                    // Display the response from the server
                    emailResponse.innerText = result;
                })
                .catch(error => {
                    console.error('Error:', error);
                    emailResponse.innerText = 'Error sending email';
                });
        });
    });


    document.addEventListener('DOMContentLoaded', function () {
        const stockForm = document.getElementById('stockForm');
        const stockResult = document.getElementById('stockResult');

        stockForm.addEventListener('submit', function(event) {
            event.preventDefault(); // Prevent default form submission behavior

            const symbol = document.getElementById('symbol').value; // Get the value entered by the user

            // Fetch stock data from server using the user-entered symbol
            fetch(`/stock/${symbol}`)
                .then(response => response.json())
                .then(data => {
                    // Format the stock data
                    const formattedData = `
                        <p>Open: ${data.o}</p>
                        <p>High: ${data.h}</p>
                        <p>Low: ${data.l}</p>
                        <p>Close: ${data.c}</p>
                        <p>Previous Close: ${data.pc}</p>
                        <p>Difference: ${data.d}</p>
                        <p>Difference Percentage: ${data.dp}</p>
                    `;

                    // Display formatted stock data in the result element
                    stockResult.innerHTML = formattedData;
                })
                .catch(error => {
                    console.error('Error fetching stock data:', error);
                    stockResult.innerHTML = 'Error fetching stock data';
                });
        });
    });

</script>
<script src="../client.js"></script>
<script src="../script.js"></script>
<script src="https://kit.fontawesome.com/2d3632a15c.js" crossorigin="anonymous"></script>
</html>
